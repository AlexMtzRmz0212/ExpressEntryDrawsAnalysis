name: Update Express Entry Data

on:
  schedule:
    # Run daily at 9 AM UTC (4 AM EST, 5 AM EDT)
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allow manual triggers

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests
        
    - name: Run data update script
      env:
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        SMTP_FROM_EMAIL: ${{ secrets.SMTP_FROM_EMAIL }}
        SMTP_TO_EMAIL_TEST: ${{ secrets.SMTP_TO_EMAIL_TEST }}
      run: |
        cd Data
        python -c """
        from Draws import ExpressEntryManager
        try:
          # Get credentials from environment
          smtp_server = os.getenv("SMTP_SERVER")
          smtp_port = int(os.getenv("SMTP_PORT", 587))
          smtp_user = os.getenv("SMTP_USER")
          smtp_password = os.getenv("SMTP_PASSWORD")
          from_email = os.getenv("SMTP_FROM_EMAIL")
          to_email_test = os.getenv("SMTP_TO_EMAIL_TEST")
          
          # Validate environment variables
          if not all([smtp_server, smtp_user, smtp_password, from_email, to_email_test]):
              raise ValueError("Missing required SMTP environment variables")
        m = ExpressEntryManager()
        needs_update, existing_count, api_count = m.check_data_freshness()

        # Check if new draws were added
        if needs_update:
            print(f'New draw found ({api_count} > {existing_count}). Sending email.')
            m.update_data()
            m.analyze_draws()
            number, datetime, name, size, crs, since, between = m.format_draw_info(latest, previous)
            manager.send_email(
              subject=f"New Express Entry Draw #{number} - {name}",
              body=f"Draw Date: {datetime}\nType: {name}\nInvitations: {size}\nMinimum CRS: {crs}\nThis Draw happened: {since}\nDays Between Previous Draw: {between}",
              to_email=to_email_test,
              from_email=from_email,
              smtp_server=smtp_server,
              smtp_port=smtp_port,
              smtp_user=smtp_user,
              smtp_password=smtp_password
            )
        else:
            print(f'No new draws found ({api_count} <= {existing_count}). Skipping email.')
        """
        
    - name: Commit and push if changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Data/analysis.json
        git add Data/EE.json
        git add Data/EE.csv
        git diff --staged --quiet || git commit -m "Auto-update Express Entry data [skip ci]"
        git push
